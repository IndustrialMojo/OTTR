apply plugin: "liquibase"

def db_url = rootProject.props.getProperty("spring.datasource.url") + "?allowMultiQueries=true"
def db_username = rootProject.props.getProperty("spring.datasource.username")
def db_password = rootProject.props.getProperty("spring.datasource.password")

task("clean_liquibase") << {
	println "executing clean_liquibase"
	def changeLog = "$projectDir/src/main/db/scripts/liquibase/changelog_clean_liquibase.xml"
	liquibase {
		activities {
			main {
				changeLogFile changeLog
				url db_url
				username db_username
				password db_password
			}
		}
	}    
}

task("create_ottr_tables") << {
	println "executing create_ottr_tables"
	def changeLog = "$projectDir/src/main/db/scripts/ottr_tables/changelog_create_ottr_tables.xml"
	liquibase {
		activities {
			main {
				changeLogFile changeLog
				url db_url
				username db_username
				password db_password
			}
		}
	}    
}

task("load_ottr_tables") << {
	println "executing drop_ottr_tables"
	def changeLog = "$projectDir/src/main/db/scripts/ottr_tables/changelog_load_ottr_tables.xml"
	liquibase {
		activities {
			main {
				changeLogFile changeLog
				url db_url
				username db_username
				password db_password
			}
		}
	}    
}

task("drop_ottr_tables") << {
	println "executing drop_ottr_tables"
	def changeLog = "$projectDir/src/main/db/scripts/ottr_tables/changelog_drop_ottr_tables.xml"
	liquibase {
		activities {
			main {
				changeLogFile changeLog
				url db_url
				username db_username
				password db_password
			}
		}
	}    
}

task("create_usr_tables") << {
	println "executing create_usr_tables"
	def changeLog = "$projectDir/src/main/db/scripts/usr_tables/changelog_create_usr_tables.xml"
	liquibase {
		activities {
			main {
				changeLogFile changeLog
				url db_url
				username db_username
				password db_password
			}
		}
	}    
}

task("load_usr_tables") << {
	println "executing load_usr_tables"
	def changeLog = "$projectDir/src/main/db/scripts/usr_tables/changelog_load_usr_tables.xml"
	liquibase {
		activities {
			main {
				changeLogFile changeLog
				url db_url
				username db_username
				password db_password
			}
		}
	}    
}

task("drop_usr_tables") << {
	println "executing drop_usr_tables"
	def changeLog = "$projectDir/src/main/db/scripts/usr_tables/changelog_drop_usr_tables.xml"
	liquibase {
		activities {
			main {
				changeLogFile changeLog
				url db_url
				username db_username
				password db_password
			}
		}
	}    
}

task("create_ntt_tables") << {
	println "executing create_ntt_tables"
	def changeLog = "$projectDir/src/main/db/scripts/ntt_tables/changelog_create_ntt_tables.xml"
	liquibase {
		activities {
			main {
				changeLogFile changeLog
				url db_url
				username db_username
				password db_password
			}
		}
	}    
}

task("load_ntt_tables") << {
	println "executing load_ntt_tables"
	def changeLog = "$projectDir/src/main/db/scripts/ntt_tables/changelog_load_ntt_tables.xml"
	liquibase {
		activities {
			main {
				changeLogFile changeLog
				url db_url
				username db_username
				password db_password
			}
		}
	}    
}

task("update_ntt_tables") << {
	println "executing update_ntt_tables"
	def changeLog = "$projectDir/src/main/db/scripts/ntt_tables/changelog_update_ntt_tables.xml"
	liquibase {
		activities {
			main {
				changeLogFile changeLog
				url db_url
				username db_username
				password db_password
			}
		}
	}    
}

task("clean_ntt_tables") << {
	println "executing clean_ntt_tables"
	def changeLog = "$projectDir/src/main/db/scripts/ntt_tables/changelog_clean_ntt_tables.xml"
	liquibase {
		activities {
			main {
				changeLogFile changeLog
				url db_url
				username db_username
				password db_password
			}
		}
	}    
}

task("drop_ntt_tables") << {
	println "executing drop_ntt_tables"
	def changeLog = "$projectDir/src/main/db/scripts/ntt_tables/changelog_drop_ntt_tables.xml"
	liquibase {
		activities {
			main {
				changeLogFile changeLog
				url db_url
				username db_username
				password db_password
			}
		}
	}    
}